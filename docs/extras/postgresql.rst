:mod:`extras.postgresql` --- PostgreSQL Database Service
========================================================

.. module:: extras.postgresql
    :synopsis: Serving PostgreSQL database.

-------

A :class:`~service.YellowService` for running PostGreSQL DB. Runs the official PostgreSQL docker image, with
integration with ``sqlalchemy``.

.. note::

    Requires the ``postgresql`` extra. For more information, see our :ref:`installation guide <installation>`.

.. class:: PostgreSQLService(docker_client: docker.client.DockerClient, image: str="postgres:latest", *, user: str='postgres', password: str='guest', \
        default_db: str | None =None, container_create_kwargs: dict[str, typing.Any] | None = None, **kwargs)

    A service that runs a PostgreSQL database. Inherits from :class:`~subclasses.SingleContainerService` and
    :class:`~extras.sql_base.SQLService`.

    :param docker_client: The docker client to used to pull and create the Postgresql container.

    :param image: The image name to create a container of.

    :param user: The name of the default user for the database.
    :param password: The password for the default user.

    :param default_db: The name of the default database. If :data:`None`, uses the same name as the
     default user.

    :param container_create_kwargs: Additional keyword arguments passed to :meth:`docker.models.containers.ContainerCollection.create`.

    :param \*\*kwargs: Additional keyword arguments passed to :class:`~extras.sql_base.SQLService`.

    Has the following additional methods:

    .. method:: local_connection_string(...)->str
                container_connection_string(...)->str
                host_connection_string(...)->str

        Equivalent to :meth:`.SQLService.local_connection_string`, :meth:`.SQLService.container_connection_string`,
        and :meth:`.SQLService.host_connection_string`, except that the `database` parameter defaults to the
        `default_db`

    .. method:: engine(**kwargs) -> sqlalchemy.engine.Engine

        .. deprecated:: 0.7.2
            Create an engine manually instead.

        Returns a sqlalchemy engine to the database, using a default connection string generated by
        :meth:`local_connection_string`.

        :param \*\*kwargs: Additional keyword arguments passed to :func:`sqlalchemy.create_engine`.

    .. method:: connection(**kwargs) -> sqlalchemy.engine.Connection

        .. deprecated:: 0.7.2
            Create a connection from a manually-created engine instead.

        Creates an SQLAlchemy connection to the database, using a default connection string generated by
        :meth:`local_connection_string`.

        :param \*\*kwargs: Additional keyword arguments passed to :meth:`sqlalchemy.Engine.connect`.
